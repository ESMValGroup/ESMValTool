;;#############################################################################
;; EMAC-SPECIFIC REFORMAT ROUTINES
;; Author: Mattia Righi (DLR, Germany)
;;#############################################################################
;;
;; Description
;;    Reformats the EMAC output to the CMOR standard.
;;
;; Input requirements
;;    Files from the same experiment are collected in a single directory
;;      (and relative subdirectories)
;;    Files are monthly-aggregated and named as (at least one "_" as separator)
;;      <EXPERIMENT>_<YYYYMM>_<CHANNEL>[OTHER FLAGS].nc
;;    Files contain a time coordinate (of whatever size)
;;    Files are generated by EMAC (cdo postprocessed files also supported)
;;    Files of a given model output are generated with the same MESSy version
;;
;; Supported fields
;;    T3I,  T3D,  T3M:  (time,plev,lat,lon) on pressure levels
;;    T2Is, T2Ds, T2Ms: (time, lat, lon) surface value or column integration
;;    T2Iz, T2Dz, T2Mz: (time, plev, lat) zonal mean
;;    time = (I)nstantaneous, (D)aily mean, (M) monthly mean
;;
;; Modification history
;;    20150417-A_righ_ma: removed check_ncl_version (no longer required).
;;    20150324-A_righ_ma: improved for EMAC2 output and better performance.
;;    20130505-A_gott_kl: modified do deal with EMAC2 output.
;;    20130502-A_righ_ma: written.
;;
;;#############################################################################

load "./interface_data/ncl.interface"
load "./interface_scripts/messaging.ncl"

scriptname = "reformat_scripts/EMAC/reformat_EMAC_main.ncl"

; a_laue_ax+

; The list gFileList will be filled by "find_and_read_var" with the filenames of
; all input files processed. We use a global definition of this list because
; passing it as an argument to "find_and_read_var" would require changes to all
; "EMAC_recipe" files, which does not seem to be a good idea.
; The function "write_output" takes this list as an argument to write the names
; of all files to the log-file. After calling write_output, the list gFileList
; and the counter gNFiles are reset.

gFileList = new(10000, string)
gNFiles = 0  ; counter

; a_laue_ax-

;;### GLOBAL SETTINGS #########################################################
begin

    ;; Selected variable (standard name)
    VAR  = getenv("ESMValTool_variable")

    ;; Selected type
    FIELD  = getenv("ESMValTool_field")

    ;; Time period (YEAR1-01 to YEAR2-12 will be processed)
    YEAR1 = toint(getenv("ESMValTool_start_year"))
    YEAR2 = toint(getenv("ESMValTool_end_year"))

    ;; Experiment number/name
    EXPER   = getenv("ESMValTool_model")

    ;; Model name
    MODEL = "EMAC"

    ;; Project
    PROJECT = getenv("ESMValTool_project")

    ;; Input path (must be existing, data must be monthly-aggregated)
    INPATH  = getenv("ESMValTool_indir_path")

    ;; Output file
    OUTFILE = getenv("ESMValTool_outfile_fullpath")

    ;; Temporary file for storing variable-file associations and save time on
    ;; subsequent iterations of the time loop
    VFATMP = getenv("ESMValTool_wrk_dir") + "/EMAC_reformat.tmp"

    ;; Recipe file
    RECIPEFILE = "./reformat_scripts/EMAC/recipes/EMAC_recipe_" + VAR + ".ncl"

end

;;### MAIN ####################################################################

load "./reformat_scripts/EMAC/reformat_EMAC_func.ncl"

begin

    verbosity  = stringtointeger(getenv("ESMValTool_verbosity"))
    enter_msg(scriptname, "", 2)

    info_output("INPATH = " + INPATH, verbosity, 1)

    ;; Remove existing temp file
    if (isfilepresent_esmval(VFATMP)) then
        system("rm -f " + VFATMP)
    end if

    ;; Check input path
    check_inpath()

    ;; Find MESSy version
    find_messy_version()

    ;; Summary
    info_output("VARIABLE      " + VAR + " (" + FIELD + ")", verbosity, 2)
    info_output("EXPERIMENT    " + EXPER, verbosity, 2)
    info_output("TIME PERIOD   " + "01/" + YEAR1 + "-12/" + YEAR2, \
                verbosity, 2)
    info_output("INPUT PATH    " + INPATH, verbosity, 2)
    info_output("OUTPUT FILE   " + OUTFILE, verbosity, 2)
    info_output("MESSy VERSION " + VERSION + "." + SUBVERSION, verbosity, 2)

    ;; Find EMAC name and corresponding stream/file
    EMAC = find_name(VAR)

    ;; Check valid types
    if (.not.isStrSubset(EMAC@type, str_sub_str(FIELD, "M", "?")).and. \
        .not.isStrSubset(EMAC@type, str_sub_str(FIELD, "D", "?")).and. \
        .not.isStrSubset(EMAC@type, str_sub_str(FIELD, "I", "?")))
        error_msg("f", "reformat_EMAC_main.ncl", "", FIELD + \
                  " is not a valid type for variable " + VAR)
    end if
    VERT = EMAC@vert
    if (EMAC.eq."#RECIP") then
        info_output("EMAC NAME     see recipes/EMAC_recipe_" + \
                    VAR + ".ncl", verbosity, 2)
    else
        info_output("EMAC NAME     " + EMAC, verbosity, 2)
    end if
    if (VERT.ne."") then
        info_output("VERTICAL      " + VERT, verbosity, 2)
    end if

    ;; Set date range
    i = 0
    DATE = new(12 * (YEAR2 - YEAR1 + 1), string)
    do yy = YEAR1, YEAR2
        do mm = 1, 12
            DATE(i) = sprinti("%0.4i", yy) + sprinti("%0.2i", mm)
            i = i + 1
        end do
    end do

; a_laue_ax+
    ; gFileList will be filled with the names of the files processed by
    ; extract_var

    gNFiles = 0
    fixfile  = "none"  ; not applicable for EMAC files
    version  = getenv("0_ESMValTool_version")  ; ESMValTool version number
; a_laue_ax-

    ;; Time loop
    do i = 0, dimsizes(DATE) - 1
        ;; Extract variable
        xx = extract_var(EMAC, VERT, DATE(i), VAR)
        if (.not.isdefined("VARPROC")) then
            VARPROC = xx
        else  ; append to create time series
            tmp = array_append_record(VARPROC, xx, 0)
            delete(VARPROC)
            VARPROC = tmp
            delete(tmp)
        end if
        delete(xx)
    end do  ; DATE

    ;; Format coordinates
    format_coord(VARPROC)

    ;; Check units
    check_units(VARPROC, VAR)

    ;; Consider to activate this if results from vinth2p look dubious.
    ;; VARPROC = fix_FillValue(VARPROC)

    ;; Variable attributes (CMOR)
    tmp = var_attrib(VARPROC, VAR)

    delete(VARPROC)
    VARPROC = tmp
    delete(tmp)

    ; Write output

; a_laue_ax+
    ; remove file names that are in the list more than once
    ; (this can happen because each EMAC output file usually contains more than
    ; one variable)

    flist = new(gNFiles, string)  ; copy first element of list
    ic = 0
    flist(0) = gFileList(0)
    do i = 1, gNFiles - 1
        if (flist(ic).ne.gFileList(i)) then
            ic = ic + 1
            flist(ic) = gFileList(i)
        end if
    end do

    ; save results to netCDF and write names of files processed to log-file

;    write_output(VARPROC, VAR)
    write_output(VARPROC, VAR, flist(0:ic), fixfile, version)

    ; clean up and reset global counter gNFiles

    delete(flist)
    gNFiles = 0
; a_laue_ax-

    delete(EMAC)
    delete(VERT)
    delete(DATE)
    delete(VARPROC)

    info_output("OUTFILE = " + OUTFILE, verbosity, 1)

    ;; Remove existing temp file
    if (isfilepresent_esmval(VFATMP)) then
        system("rm -f " + VFATMP)
    end if

    leave_msg(scriptname, "", 2)
end
