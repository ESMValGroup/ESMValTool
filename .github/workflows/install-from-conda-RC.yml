---
name: Install from Conda RC

# runs on a push on main and at the end of every day
on:
  push:
    branches:
      - main
      - testing_v281rc1
  schedule:
    - cron: '0 4 * * *'

jobs:
  linux:
    runs-on: "ubuntu-latest"
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
    name: Linux Python ${{ matrix.python-version }}
    steps:
      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          miniforge-version: "latest"
          miniforge-variant: Mambaforge
          use-mamba: true
      - shell: bash -l {0}
        run: mkdir -p conda_install_linux_artifacts_python_${{ matrix.python-version }}
      - name: Record versions
        shell: bash -l {0}
        run: |
          mamba --version 2>&1 | tee conda_install_linux_artifacts_python_${{ matrix.python-version }}/conda_version.txt
          which conda 2>&1 | tee conda_install_linux_artifacts_python_${{ matrix.python-version }}/conda_path.txt
          which mamba 2>&1 | tee -a conda_install_linux_artifacts_python_${{ matrix.python-version }}/conda_path.txt
          python -V 2>&1 | tee conda_install_linux_artifacts_python_${{ matrix.python-version }}/python_version.txt
      - name: Install ESMValTool
        shell: bash -l {0}
        run: mamba create -n test -c conda-forge/label/esmvalcore_rc -c conda-forge esmvaltool
      - name: Verify installation
        shell: bash -l {0}
        run: |
          esmvaltool --help
          esmvaltool version 2>&1 | tee conda_install_linux_artifacts_python_${{ matrix.python-version }}/version.txt
      - name: Show full environment
        shell: bash -l {0}
        run: conda list
      - name: Upload artifacts
        if: ${{ always() }}  # upload artifacts even if fail
        uses: actions/upload-artifact@v2
        with:
          name: Conda_Install_Linux_python_${{ matrix.python-version }}
          path: conda_install_linux_artifacts_python_${{ matrix.python-version }}
