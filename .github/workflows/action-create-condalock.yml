name: Conda lock file creation

on:
  push:
    branches:
    - main
    - condalock
  schedule:
    - cron: '0 4 */10 * *'

jobs:
  create-lock-file:
    name: Create conda lock file for latest Python
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          activate-environment: esmvaltool-fromlock
          python-version: "latest"
          miniconda-version: "latest"
          channels: conda-forge
      - name: Show conda config
        shell: bash -l {0}
        run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show
      - name: Python info
        shell: bash -l {0}
        run: |
          which python
          python --version
      - name: Install conda-lock
        shell: bash -l {0}
        run: conda install -y conda-lock
      - name: Create conda lock file for linux-64
        shell: bash -l {0}
        run: conda-lock lock --platform linux-64 -f environment.yml --mamba
      - name: Rename file
        shell: bash -l {0}
        run: mv conda-linux-64.lock conda-linux-64-GA.lock
      - shell: bash -l {0}
        run: mkdir -p source_install_linux_artifacts_python_${{ matrix.python-version }}
      - shell: bash -l {0}
        run: conda --version 2>&1 | tee source_install_linux_artifacts_python_${{ matrix.python-version }}/conda_version.txt
      - shell: bash -l {0}
        run: which python
      - shell: bash -l {0}
        run: python -V 2>&1 | tee source_install_linux_artifacts_python_${{ matrix.python-version }}/python_version.txt
      - shell: bash -l {0}
        run: conda create --name esmvaltool-fromlock --file conda-linux-64-GA.lock
      - shell: bash -l {0}
        run: conda install pip
      - shell: bash -l {0}
        run: which python
      - shell: bash -l {0}
        run: pip --version
      - shell: bash -l {0}
        run: pip install -e .[develop]
      - shell: bash -l {0}
        run: esmvaltool --help
      - shell: bash -l {0}
        run: esmvaltool version 2>&1 | tee source_install_linux_artifacts_python_${{ matrix.python-version }}/version.txt
      - shell: bash -l {0}
        run: pytest -n 2 -m "not installation"
