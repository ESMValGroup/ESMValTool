###############################################################################
# namelist_GlobalOcean.yml
# 
# Description
# Diagnostics to support the evaluation of ocean biogeochemical cycles at
# global scales.  Implemented routines produce time series lines and contour
# plots (for climatological distributions or inter-annual or inter-seasonal
# variability) using either 2-D (surface) or 3-D (depth-resolving) ocean
# variables
# 
# Authors
# Lee de Mora (PML, UK)
# Oliver Andrews (UEA, UK)
# Clare Enright (UEA, UK)
# 
# Project
# EMBRACE, UKESM
# 
# Reference
# Bakker, D. C. E. et al., Earth Syst. Sci. Data, 6, 69-90,
# doi:10.5194/essd-6-69-2014 (2014)
# Bianchi, D. et al., Global Biogeochem. Cy., 26, GB2009,
# doi:10.1029/2011GB004209 (2012)
# Jones, S. D. et al., J. Adv. Model Earth Syst., in press (2015).
# Key, R. M. et al.,Global Biogeochem. Cy., 18, GB4031, doi:10.109/2004GB002247
# (2004)
# Roedenbeck, C. et al., Ocean Sci., 9, 193-216, doi:10.5194/os-9-193-2013
# (2013)
# Takahashi, T. et al., Mar. Chem., 164, 95â€“125,
# doi:10.1016/j.marchem.2014.06.004 (2014)
# 
# This namelist is part of the ESMValTool
###############################################################################
---

models:
# working models
  - {model: CanESM2,      project: CMIP5,  mip: Omon,  exp: historical,  ensemble: r1i1p1,  start_year: 2001,  end_year: 2004}
  - {model: GISS-E2-H,    project: CMIP5,  mip: Omon,  exp: historical,  ensemble: r1i1p1,  start_year: 2001,  end_year: 2004}
  - {model: HadGEM2-AO,    project: CMIP5,  mip: Omon,  exp: historical,  ensemble: r1i1p1,  start_year: 2001,  end_year: 2004}
  - {model: HadCM3,    project: CMIP5,  mip: Omon,  exp: historical,  ensemble: r1i1p1,  start_year: 2001,  end_year: 2004}
  - {model: CanCM4,    project: CMIP5,  mip: Omon,  exp: historical,  ensemble: r1i1p1,  start_year: 2001,  end_year: 2004}
  - {model: CSIRO-Mk3-6-0,    project: CMIP5,  mip: Omon,  exp: historical,  ensemble: r1i1p1,  start_year: 2001,  end_year: 2004}

#####
# models with Errors right now (June 2018):

# Problem with latitude > 90.
  - {model: HadGEM2-CC,    project: CMIP5,  mip: Omon,  exp: historical,  ensemble: r1i1p1,  start_year: 2001,  end_year: 2004} 
  - {model: HadGEM2-ES,    project: CMIP5,  mip: Omon,  exp: historical,  ensemble: r1i1p1,  start_year: 2001,  end_year: 2004} 

###
# Problem with times
#  - {model: MIROC-ESM,    project: CMIP5,  mip: Omon,  exp: historical,  ensemble: r1i1p1,  start_year: 2001,  end_year: 2004}
#  - {model: MIROC-ESM-CHEM,    project: CMIP5,  mip: Omon,  exp: historical,  ensemble: r1i1p1,  start_year: 2001,  end_year: 2004}

# Unstructured grids                 
#  - {model: MPI-ESM-LR,  project: CMIP5,  mip: Omon,  exp: historical,  ensemble: r1i1p1,  start_year: 2001,  end_year: 2003}
#  - {model: MPI-ESM-MR,  project: CMIP5,  mip: Omon,  exp: historical,  ensemble: r1i1p1,  start_year: 2001,  end_year: 2004}
#  - {model: ACCESS1-0,    project: CMIP5,  mip: Omon,  exp: historical,  ensemble: r1i1p1,  start_year: 2001,  end_year: 2004}  
#  - {model: ACCESS1-3,    project: CMIP5,  mip: Omon,  exp: historical,  ensemble: r1i1p1,  start_year: 2001,  end_year: 2004}



preprocessors:
  # --------------------------------------------------
  # Time series preprocessors
  # --------------------------------------------------
  prep_timeseries_1: # For 2D fields
    fix_data:     
    fix_metadata: 
    average_region:               
      coord1: longitude
      coord2: latitude
    multi_model_statistics:
      span: overlap
      statistics: [mean ]
      
  prep_timeseries_2: # For specific levels of 3D fields
    fix_data:
    fix_metadata:  
    extract_levels:
      levels:  [0., 10., 100., 1000. , ]
      scheme: linear_extrap              
    average_region:               
      coord1: longitude
      coord2: latitude
    multi_model_statistics:
      span: overlap
      statistics: [mean ]
      
  prep_timeseries_3: # For regional fields
    fix_data:
    fix_metadata:
    extract_region:
      long1:  -80.
      long2:  30.
      lat1:   -80.
      lat2:   80.
    average_region:               
      coord1: longitude
      coord2: latitude
    multi_model_statistics:
      span: overlap
      statistics: [mean ]
            
  prep_timeseries_4: # For regional fields at depth
    fix_data:
    fix_metadata:
    extract_levels:
      levels:  [0., 10., 100., 1000. , ]
      scheme: linear_extrap         
    extract_region:
      long1:  -80.
      long2:  30.
      lat1:   -80.
      lat2:   80.  
    average_region:               
      coord1: longitude
      coord2: latitude    
    multi_model_statistics:
      span: overlap
      statistics: [mean ]

  prep_timeseries_5: # For Global Volume Averaged
    fix_data:
    fix_metadata:
    average_volume:               
      coord1: longitude
      coord2: latitude
      coordz: depth
    multi_model_statistics:
      span: overlap
      statistics: [mean ]
            
  prep_timeseries_6: # For regional volume averaged
    fix_data:
    fix_metadata:
    extract_region:
      long1:  -80.
      long2:  30.
      lat1:   -80.
      lat2:   80.  
    average_volume:
      coord1: longitude
      coord2: latitude  
      coordz: depth                         
    multi_model_statistics:
      span: overlap
      statistics: [mean ]      

  prep_timeseries_7: # For regional volume averaged (at the surface)
    fix_data:
    fix_metadata:
    extract_volume:
      long1:  -80.
      long2:  30.
      lat1:   -80.
      lat2:   80. 
      z1:      0.
      z2:     100. 
    average_volume:
      coord1: longitude
      coord2: latitude  
      coordz: depth                         
    multi_model_statistics:
      span: overlap
      statistics: [mean ]   


  # --------------------------------------------------
  # Map preprocessors - 2D fields
  # --------------------------------------------------
  prep_map_1: # For Global 2D fields
    fix_metadata: 
    fix_data:
    time_average:
    
  prep_map_2: # For Global 2D fields with regridding
    fix_metadata: 
    regrid:
      target_grid: 1x1
      scheme: linear    
    time_average:      
    multi_model_statistics:
      span: overlap
      statistics: [mean ]
      
  prep_map_3: # For specific levels of 3D fields with regrid
    fix_data:
    fix_metadata:  
    extract_levels:
      levels:  [0., 10., 100., 1000., ]
      scheme: linear_extrap              
    time_average:      
    regrid:
      target_grid: 1x1
      scheme: linear      
    multi_model_statistics:
      span: overlap
      statistics: [mean ]
      
  prep_map_4: # For a specific region with regrid
    fix_data:
    fix_metadata:
    extract_region:
      long1:  -80.
      long2:   30.
      lat1:   -80.
      lat2:    80.
    time_average:      
    regrid:
      target_grid: 1x1
      scheme: linear           
    multi_model_statistics:
      span: overlap
      statistics: [mean ]
            
  prep_map_5: # For a specific region at depth levels,
    fix_data:
    fix_metadata:
    extract_levels:
      levels:  [0., 10., 100., 1000., ]
      scheme: linear_extrap
    time_average:               
    extract_region:
      long1:  -80.
      long2:  30.
      lat1:   -80.
      lat2:   80.
    regrid:
      target_grid: 1x1
      scheme: linear            
    multi_model_statistics:
      span: overlap
      statistics: [mean ]

  # --------------------------------------------------
  # Transects preprocessors
  # --------------------------------------------------
  prep_transect_1: # For extracting along a trajectory
    fix_data:
    fix_metadata:
    time_average:
    extract_trajectory:
      latitudes: [-5., 5.,]
      longitudes: [332.,332.]
      n: 4              # VERY SLOW with high numbers!
     
  prep_transect_2: # For extracting a transect
    fix_data:
    fix_metadata:
    time_average:
    extract_slice: # Pacific Equator
      latitude: 0.
      longitude: [120., 300.]
                           
  prep_transect_3: # For extracting a transect
    fix_data:
    fix_metadata:
    time_average:
    extract_slice: # Atlantic Meridional Transect
      latitude: [-50.,50.]  
      longitude: 332.
      
  # --------------------------------------------------
  # Depth-profile preprocessors
  # --------------------------------------------------
  prep_profile_1: # For a global profile
    fix_data:     
    fix_metadata: 
    average_region:
      coord1: longitude
      coord2: latitude   
      
  prep_profile_2: # For a regional profile
    fix_data:     
    fix_metadata: 
    extract_volume:
      long1: 0.
      long2:  20.
      lat1:  -30.
      lat2:  30.
      z1: 0.
      z2: 100.
    average_region:          
      coord1: longitude
      coord2: latitude
                  
  # --------------------------------------------------
  # Depth-profile preprocessors
  # --------------------------------------------------
  prep_depth_integration_1: # For a 2D map global profile
    fix_data:     
    fix_metadata: 
    depth_integration:
      coordz: depth
    time_average:      

       
     
diagnostics:
  # --------------------------------------------------
  # Depth integrated diagnostics
  # --------------------------------------------------  
  diag_depthInt_1:
    description: Global Ocean Surface mean timeseries
    variables:       
      thetao: # Temperature ocean 
        preprocessor: prep_depth_integration_1      
        field: TO3M
    scripts:
      Global_Ocean_DepthIntegration_map: &Global_Ocean_DepthIntegration_map
        script: ocean/diagnostic_maps.py
        
  # --------------------------------------------------
  # Time series diagnostics
  # --------------------------------------------------  
  diag_timeseries_1:
    description: Global Ocean Surface mean timeseries
    variables:       
      tos: # Temperature ocean surface
        preprocessor: prep_timeseries_1      
        field: TO2Ms
    scripts:
      Global_Ocean_Surface_mean_timeseries: &Global_Ocean_Surface_mean_timeseries
        script: ocean/diagnostic_timeseries.py
        
  diag_timeseries_2:
    description: Global Ocean Depth Layers mean timeseries
    variables:       
      thetao: # Temperature ocean 3D
        preprocessor: prep_timeseries_2
        field: TO3M
    scripts:
      Global_Ocean_DepthLayers_mean_timeseries: &Global_Ocean_DepthLayers_mean_timeseries
        script: ocean/diagnostic_timeseries.py
        
  diag_timeseries_3:
    description: Regional scale surface diagnostics
    variables:       
      tos: # Temperature ocean surface
        preprocessor: prep_timeseries_3      
        field: TO2Ms             
    scripts:
      Regional_Ocean_Surface_mean_timeseries: &Regional_Ocean_Surface_mean_timeseries
        script: ocean/diagnostic_timeseries.py
        
  diag_timeseries_4:
    description: Regional scale diagnostics
    variables:       
      thetao: # Temperature ocean 3D
        preprocessor: prep_timeseries_4
        field: TO3M
    scripts:
      Regional_Ocean_DepthLayers_mean_timeseries: &Regional_Ocean_DepthLayers_mean_timeseries
        script: ocean/diagnostic_timeseries.py
        
  diag_timeseries_5:
    description: Global Volume average diagnostics
    variables:       
      thetao: # Temperature ocean 3D
        preprocessor: prep_timeseries_5
        field: TO3M
    scripts:
      Global_VolumeAverage_Ocean_Physics_timeseries: &Global_VolumeAverage_Ocean_Physics_timeseries
        script: ocean/diagnostic_timeseries.py

  diag_timeseries_6:
    description: Regional Volume average diagnostics
    variables:       
      thetao: # Temperature ocean 3D
        preprocessor: prep_timeseries_6
        field: TO3M               
    scripts:
      Regional_VolumeAverage_Ocean_Physics_timeseries: &Regional_VolumeAverage_Ocean_Physics_timeseries
        script: ocean/diagnostic_timeseries.py

  diag_timeseries_7:
    description: Regional Volume to 100m depth average diagnostics 
    variables:       
      thetao: # Temperature ocean 3D averaged over top 100m
        preprocessor: prep_timeseries_7
        field: TO3M               
    scripts:
      Regional_Volume100mAverage_Ocean_Physics_timeseries: &Regional_Volume100mAverage_Ocean_Physics_timeseries
        script: ocean/diagnostic_timeseries.py
        
  # --------------------------------------------------
  # Map diagnostics
  # --------------------------------------------------              
  diag_map_1:
    description: Global Ocean Surface map
    variables:       
      tos: # Temperature ocean surface
        preprocessor: prep_map_1      
        field: TO2Ms
    scripts:
      Global_Ocean_Surface_mean_map: &Global_Ocean_Surface_mean_map
        script: ocean/diagnostic_maps.py

  diag_map_2:
    description: Global Ocean Surface regridded map
    variables:       
      tos: # Temperature ocean surface
        preprocessor: prep_map_2      
        field: TO2Ms
    scripts:
      Global_Ocean_Surface_regrid_map: &Global_Ocean_Surface_regrid_map
        script: ocean/diagnostic_maps.py
                
  diag_map_3:
    description: Global Ocean Depth Layers regridded map
    variables:       
      thetao: # Temperature ocean 3D
        preprocessor: prep_map_3
        field: TO3M
    scripts:
      Global_Ocean_DepthLayers_regrid_map: &Global_Ocean_DepthLayers_regrid_map
        script: ocean/diagnostic_maps.py
       
  diag_map_4:
    description: Regional scale surface regridded map 
    variables:       
      tos: # Temperature ocean surface
        preprocessor: prep_map_4      
        field: TO2Ms             
    scripts:
      Regional_Ocean_Surface_regrid_map: &Regional_Ocean_Surface_regrid_map
        script: ocean/diagnostic_maps.py
        
  diag_map_5:
    description: Regional scale depth layers regridded map
    variables:       
      thetao: # Temperature ocean 3D
        preprocessor: prep_map_5
        field: TO3M
    scripts:
      Regional_Ocean_DepthLayers_mean_map: &Regional_Ocean_DepthLayers_mean_map
        script: ocean/diagnostic_maps.py

  # --------------------------------------------------
  # Transects diagnostics
  # -------------------------------------------------- 
  diag_transect_1:
    description: Extracting along a trajectory
    variables:       
      thetao: # Temperature ocean 3D
        preprocessor: prep_transect_1
        field: TO3M
    scripts:
      Regional_Ocean_DepthLayers_regrid_transect: &Regional_Ocean_DepthLayers_regrid_transect
        script: ocean/diagnostic_transects.py
                

  diag_transect_2:
    description: Extracting along a line with regridding and multimodle mean
    variables:       
      thetao: # Temperature ocean 3D
        preprocessor: prep_transect_2
        field: TO3M
    scripts:
      Regional_Ocean_DepthLayers_slice_regrid_mmmean_transect: &Regional_Ocean_DepthLayers_slice_regrid_mmmean_transect
        script: ocean/diagnostic_transects.py

  diag_transect_3:
    description: Extracting along a line with regridding and multimodel mean
    variables:       
      thetao: # Temperature ocean 3D
        preprocessor: prep_transect_3
        field: TO3M
    scripts:
      Regional_Ocean_DepthLayers_AMTslice_regrid_mmmean_transect: &Regional_Ocean_DepthLayers_AMTslice_regrid_mmmean_transect
        script: ocean/diagnostic_transects.py
                                

  # --------------------------------------------------
  # Depth-profile diagnostics
  # --------------------------------------------------  
  diag_profile_1:
    description: Global Ocean mean profile
    variables:       
      thetao: # Temperature ocean surface
        preprocessor: prep_profile_1      
        field: TO3M
    scripts:
      Global_Ocean_mean_profile: &Global_Ocean_mean_profile
        script: ocean/diagnostic_profiles.py
        
  diag_profile_2:
    description: Regional Ocean mean profile
    variables:       
      thetao: # Temperature ocean surface
        preprocessor: prep_profile_2      
        field: TO3M
    scripts:
      Regional_Ocean_mean_profile: &Regional_Ocean_mean_profile
        script: ocean/diagnostic_profiles.py
        
                                            
