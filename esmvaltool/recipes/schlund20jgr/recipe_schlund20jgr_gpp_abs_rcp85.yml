# ESMValTool
# recipe_schlund20jgr_gpp_abs_rcp85.yml
---
documentation:

  description: |
    Use MLR (Machine Learning Regression) models to contstrain absolute
    projected gross primary production (GPP) in the emission-driven RCP 8.5
    scenario.

  authors:
    - schlund_manuel

  maintainer:
    - schlund_manuel

  references:
    - schlund20jgr

  projects:
    - 4c
    - crescendo
    - usmile


# YAML anchors

PROVENANCE_ANCHOR: &provenance
  realms:
    - land
  themes:
    - ML
    - EC
    - carbon

DATASET_ANCHOR: &datasets
  - {dataset: CanESM2}
  - {dataset: CESM1-BGC}
  - {dataset: GFDL-ESM2M}
  - {dataset: HadGEM2-ES}
  - {dataset: MIROC-ESM}
  - {dataset: MPI-ESM-LR}
  - {dataset: NorESM1-ME}

DATASET_ANCHOR_CO2: &datasets_co2
  - {dataset: CanESM2}
  - {dataset: CESM1-BGC}
  - {dataset: GFDL-ESM2M}
  - {dataset: HadGEM2-ES, end_year: 2004}
  - {dataset: MIROC-ESM}
  - {dataset: MPI-ESM-LR}
  - {dataset: NorESM1-ME}

PSEUDO_REALITY: &pseudo_reality
  grid_search_cv_param_grid: false
  only_predict: true
  pseudo_reality: ['dataset']
  save_lime_importance: false
  save_mlr_model_error: false
  save_propagated_errors: false

SEABORN_SETTINGS: &seaborn_settings
  style: ticks
  rc:
    axes.titlepad: 15.0
    xtick.top: true
    ytick.right: true
    xtick.minor.visible: true
    ytick.minor.visible: true

WEIGHTED_SAMPLES: &weighted_samples
  area_weighted: true
  time_weighted: true

VARIABLE_SETTINGS_FEATURES: &variable_settings_features
  project: CMIP5
  exp: esmHistorical
  ensemble: r1i1p1
  var_type: feature
  additional_datasets: *datasets

VARIABLE_SETTINGS_PREDICTION_INPUT: &variable_settings_prediction_input
  prediction_name: OBS
  var_type: prediction_input

VARIABLE_SETTINGS_GPP_2100: &variable_settings_gpp_2100
  project: CMIP5
  short_name: gpp
  mip: Lmon
  exp: esmrcp85
  ensemble: r1i1p1
  start_year: 2091
  end_year: 2100
  var_type: label
  additional_datasets: *datasets

PREPROCESS_MEAN_SCRIPT: &preprocess_mean_script
  script: mlr/preprocess.py

PREPROCESS_ZONAL_MEANS_SCRIPT: &preprocess_zonal_means_script
  script: mlr/preprocess.py
  collapse:
    mean: [month_number, longitude]
  convert_units_to: g m-2 yr-1

PREPROCESS_ERROR_SCRIPT: &preprocess_error_script
  script: mlr/preprocess.py
  ancestors: ['diag_mlr_label_gpp_rescaled/preprocess']
  ignore:
    - {var_type: label}

GBRT_SCRIPT: &gbrt_script
  script: mlr/main.py
  group_datasets_by_attributes: ['dataset']
  imputation_strategy: constant
  mlr_model_type: gbr_sklearn
  n_jobs: -1
  parameters_final_regressor:
    learning_rate: 0.01
    max_depth: 6
    n_estimators: 400
    subsample: 0.5
  save_mlr_model_error: test
  save_propagated_errors: true
  seaborn_settings: *seaborn_settings
  test_size: 0.25
  weighted_samples: *weighted_samples

GBRT_PSEUDO_REALITY_SCRIPT: &gbrt_pseudo_reality_script
  <<: *gbrt_script
  <<: *pseudo_reality
  parameters_final_regressor:
    learning_rate: 0.1
    max_depth: 6
    n_estimators: 30
    subsample: 0.5

LASSO_SCRIPT: &lasso_script
  script: mlr/main.py
  group_datasets_by_attributes: ['dataset']
  imputation_strategy: constant
  mlr_model_type: lasso_cv
  n_jobs: -1
  save_mlr_model_error: test
  save_propagated_errors: true
  seaborn_settings: *seaborn_settings
  test_size: 0.25
  weighted_samples: *weighted_samples

LASSO_PSEUDO_REALITY_SCRIPT: &lasso_pseudo_reality_script
  <<: *lasso_script
  <<: *pseudo_reality

MMM_SCRIPT: &mmm_script
  script: mlr/main.py
  mlr_model_type: mmm
  prediction_name: OBS
  mmm_error_type: loo
  seaborn_settings: *seaborn_settings
  weighted_samples: *weighted_samples

POSTPROCESS_SCRIPT: &postprocess_script
  script: mlr/postprocess.py
  convert_units_to: Gt yr-1
  ignore:
    - {prediction_name: null}
    - {var_type: null}
  mean: ['month_number']
  sum: ['latitude', 'longitude']

PLOT_SCRIPT: &plot_script
  script: mlr/plot.py
  additional_plot_kwargs_xy_plots: &additional_plot_kwargs
    CanESM2:         {color: C0, alpha: 0.5}
    CESM1-BGC:       {color: C1, alpha: 0.5}
    GFDL-ESM2M:      {color: C2, alpha: 0.5}
    HadGEM2-ES:      {color: C3, alpha: 0.5}
    MIROC-ESM:       {color: C4, alpha: 0.5}
    MPI-ESM-LR:      {color: C5, alpha: 0.5}
    NorESM1-ME:      {color: C6, alpha: 0.5}
    CRU:             {color: k,  alpha: 1.0, linewidth: 2}
    ERA-Interim:     {color: k,  alpha: 1.0, linewidth: 2}
    LAI3g:           {color: k,  alpha: 1.0, linewidth: 2}
    MTE:             {color: k,  alpha: 1.0, linewidth: 2}
    Scripps-CO2-KUM: {color: k,  alpha: 1.0, linewidth: 2}
  group_by_attribute: dataset
  ignore:
    - {var_type: prediction_input_error}
  legend_kwargs: &legend_kwargs
    bbox_to_anchor: [1.05, 0.5]
    borderaxespad: 0.0
    loc: center left
  seaborn_settings: *seaborn_settings
  years_in_title: true


preprocessors:

  preproc_extract_KUM:
    custom_order: true
    extract_point: &extract_point
      latitude: 19.5
      longitude: 205.2
      scheme: nearest

  preproc_extract_KUM_annual_amplitude:
    custom_order: true
    extract_point: *extract_point
    amplitude:
      coords: year

  preproc_extract_KUM_annual_mean:
    custom_order: true
    extract_point: *extract_point
    annual_statistics:
      operator: mean

  preproc_total_mean_flux_var:
    custom_order: true
    weighting_landsea_fraction: &weighting_landsea_fraction
      area_type: land
      exclude: ['BNU-ESM', 'LAI3g', 'MTE']
    extract_region: &extract_region_mean
      start_latitude: -60.0
      end_latitude: 90.0
      start_longitude: 0.0
      end_longitude: 360
    area_statistics: &area_statistics
      operator: mean
    climate_statistics:
      period: full
      operator: mean

  preproc_map:
    custom_order: true
    regrid: &regrid
      scheme: nearest
      target_grid: 2x2
    mask_landsea: &mask_sea_NE_mask
      mask_out: sea
      always_use_ne_mask: true
    extract_region: &extract_region
      start_latitude: -60.0
      end_latitude: 90.0
      start_longitude: 0.0
      end_longitude: 360
    climate_statistics: &climate_statistics
      period: month
      operator: mean

  preproc_map_flux_var:
    custom_order: true
    weighting_landsea_fraction: *weighting_landsea_fraction
    regrid: *regrid
    mask_landsea: *mask_sea_NE_mask
    extract_region: *extract_region
    climate_statistics: *climate_statistics

diagnostics:

  # Auxiliary dataset to estimate covariance

  diag_mte_for_cov_estimation:
    <<: *provenance
    description: Process MTE dataset which is used to estimate covariance structure.
    variables:
      cov_ref:
        <<: *variable_settings_prediction_input
        short_name: gpp
        preprocessor: preproc_map_flux_var
        mip: Lmon
        start_year: 1982
        end_year: 2011
        additional_datasets:
          - {dataset: MTE, project: OBS, type: reanaly, version: May12, tier: 3}
    scripts:
      preprocess:
        <<: *preprocess_mean_script
        ancestors: ['diag_mte_for_cov_estimation/cov_ref']
        output_attributes:
          tag: GPP
        convert_units_to: g m-2 yr-1

  # Use emergent constraint to rescale target variable (Step 1 in paper)

  diag_co2_cycle:
    <<: *provenance
    variables:
      features:
        <<: *variable_settings_features
        short_name: co2s
        preprocessor: preproc_extract_KUM
        mip: Amon
        exp: [esmHistorical, esmrcp85]
        start_year: 1979
        end_year: 2019
        derive: true
        tag: CO2
        additional_datasets: *datasets_co2
      prediction_input:
        <<: *variable_settings_prediction_input
        short_name: co2s
        preprocessor: preproc_extract_KUM
        mip: Amon
        start_year: 1979
        end_year: 2019
        tag: CO2
        additional_datasets:
          - {dataset: Scripps-CO2-KUM, project: OBS6, type: ground, version: 15-Nov-2019, tier: 2}
    scripts:
      plot_cycle:
        <<: *plot_script
        plot_xy:
          pyplot_kwargs:
            xlabel: 'Year'
            ylabel: 'Atmospheric CO$_2$ concentration [ppm]'
            ylim: [320, 460]
            title: 'KUM (19.5°N, 154.8°W)'

  diag_co2_amplitude_sensitivity:
    <<: *provenance
    variables:
      features:
        <<: *variable_settings_features
        short_name: co2s
        preprocessor: preproc_extract_KUM_annual_amplitude
        mip: Amon
        exp: [esmHistorical, esmrcp85]
        start_year: 1979
        end_year: 2019
        derive: true
        additional_datasets: *datasets_co2
      features_ref:
        <<: *variable_settings_features
        short_name: co2s
        preprocessor: preproc_extract_KUM_annual_mean
        mip: Amon
        exp: [esmHistorical, esmrcp85]
        start_year: 1979
        end_year: 2019
        derive: true
        ref: true
        additional_datasets: *datasets_co2
      prediction_input:
        <<: *variable_settings_prediction_input
        short_name: co2s
        preprocessor: preproc_extract_KUM_annual_amplitude
        mip: Amon
        start_year: 1979
        end_year: 2019
        additional_datasets:
          - {dataset: Scripps-CO2-KUM, project: OBS6, type: ground, version: 15-Nov-2019, tier: 2}
      prediction_input_ref:
        <<: *variable_settings_prediction_input
        short_name: co2s
        preprocessor: preproc_extract_KUM_annual_mean
        mip: Amon
        start_year: 1979
        end_year: 2019
        ref: true
        additional_datasets:
          - {dataset: Scripps-CO2-KUM, project: OBS6, type: ground, version: 15-Nov-2019, tier: 2}
    scripts:
      preprocess:
        script: mlr/preprocess.py
        ref_calculation: trend
        ref_kwargs:
          matched_by: ['dataset']
          collapse_over: 'time'
        output_attributes:
          tag: CO2_AMP_SENS
        convert_units_to: 1
      preprocess_for_plot:
        script: mlr/preprocess.py
        output_attributes:
          tag: CO2_AMP_SENS
        ref_calculation: merge
        ref_kwargs:
          matched_by: ['dataset']
      plot_co2_amplitudes:
        <<: *plot_script
        ancestors: ['diag_co2_amplitude_sensitivity/preprocess_for_plot']
        plot_xy:
          reg_line: true
          pyplot_kwargs:
            xlabel: 'Atmospheric CO$_2$ concentration [ppm]'
            ylabel: 'Amplitude of seasonal CO$_2$ cycle [ppm]'
            ylim: [0, 20]
            title: 'KUM (19.5°N, 154.8°W)'
          x_coord: mole_fraction_of_carbon_dioxide_in_air

  diag_gpp_fraction_mean:
    <<: *provenance
    variables:
      ref:
        project: CMIP5
        short_name: gpp
        preprocessor: preproc_total_mean_flux_var
        mip: Lmon
        exp: esmHistorical
        ensemble: r1i1p1
        start_year: 1991
        end_year: 2000
        ref: true
        additional_datasets: *datasets
      label:
        project: CMIP5
        short_name: gpp
        preprocessor: preproc_total_mean_flux_var
        mip: Lmon
        exp: esmrcp85
        ensemble: r1i1p1
        start_year: 2091
        end_year: 2100
        var_type: label
        additional_datasets: *datasets
    scripts:
      preprocess_fraction:
        script: mlr/preprocess.py
        convert_units_to: '1'
        output_attributes:
          tag: GPP_change
        ref_calculation: divide
        ref_kwargs:
          matched_by: ['dataset']
      preprocess:
        script: mlr/preprocess.py
        ancestors: ['diag_gpp_fraction_mean/preprocess_fraction']
        convert_units_to: '%'
        scalar_operations:
          subtract: 1.0

  diag_gpp_2100:
    <<: *provenance
    variables:
      label:
        <<: *variable_settings_gpp_2100
        preprocessor: preproc_map_flux_var
    scripts:
      preprocess:
        script: mlr/preprocess.py
        ancestors: ['diag_gpp_2100/label']
        output_attributes:
          tag: GPP
          var_type: label
        convert_units_to: g m-2 yr-1
      preprocess_for_rescaling:
        script: mlr/preprocess.py
        ancestors: ['diag_gpp_2100/preprocess']
        output_attributes:
          var_type: label_to_rescale
      plot:
        <<: *plot_script
        ancestors: ['diag_gpp_2100/preprocess']
        plot_map:
          plot_kwargs:
            cbar_label: 'GPP [gC m$^{-2}$ yr$^{-1}$]'
            cbar_ticks: [0, 1000, 2000, 3000, 4000, 5000, 6000]
            vmin: 0
            vmax: 6000

  diag_rescale_gpp_fraction_with_emergent_constraint:
    <<: *provenance
    scripts:
      rescale:
        script: mlr/rescale_with_emergent_constraint.py
        ancestors: [
          'diag_co2_amplitude_sensitivity/preprocess',
          'diag_gpp_fraction_mean/preprocess',
          'diag_gpp_2100/preprocess_for_rescaling',
        ]
        legend_kwargs: *legend_kwargs
        plot_emergent_relationship:
          pyplot_kwargs:
            xlim: [-0.01, 0.065]
            ylim: [5, 75]
            xlabel: 'Sensitivity of CO$_2$ amplitude at KUM [ppm ppm$^{-1}$]'
            ylabel: 'GPP change (2100 vs. 2000) [%]'
            title: 'RCP 8.5 scenario'
        plot_kwargs_for_groups: *additional_plot_kwargs
        seaborn_settings: *seaborn_settings

  # Process historical GPP

  diag_process_mte:
    <<: *provenance
    description: Process MTE dataset.
    variables:
      ref:
        <<: *variable_settings_prediction_input
        short_name: gpp
        preprocessor: preproc_map_flux_var
        mip: Lmon
        start_year: 1991
        end_year: 2000
        var_type: prediction_input
        additional_datasets:
          - {dataset: MTE, project: OBS, type: reanaly, version: May12, tier: 3}
      mean:
        <<: *variable_settings_prediction_input
        short_name: gpp
        preprocessor: preproc_map_flux_var
        mip: Lmon
        start_year: 1991
        end_year: 2000
        var_type: prediction_output
        additional_datasets:
          - {dataset: MTE, project: OBS, type: reanaly, version: May12, tier: 3}
      error:
        <<: *variable_settings_prediction_input
        short_name: gppStderr
        preprocessor: preproc_map_flux_var
        mip: Lmon
        start_year: 1991
        end_year: 2000
        var_type: prediction_output_error
        additional_datasets:
          - {dataset: MTE, project: OBS, type: reanaly, version: May12, tier: 3}
    scripts:
      preprocess:
        <<: *preprocess_mean_script
        output_attributes:
          tag: GPP
        convert_units_to: g m-2 yr-1
      postprocess:
        <<: *postprocess_script
        ancestors: ['diag_process_mte/preprocess']

  diag_process_historical_gpp:
    <<: *provenance
    description: Process historical GPP predicted by CMIP5 models.
    variables:
      ref:
        <<: *variable_settings_prediction_input
        short_name: gpp
        preprocessor: preproc_map_flux_var
        mip: Lmon
        start_year: 1991
        end_year: 2000
        var_type: prediction_input
        additional_datasets:
          - {dataset: MTE, project: OBS, type: reanaly, version: May12, tier: 3}
      mean:
        <<: *variable_settings_features
        short_name: gpp
        preprocessor: preproc_map_flux_var
        mip: Lmon
        start_year: 1991
        end_year: 2000
        var_type: label
    scripts:
      preprocess:
        <<: *preprocess_mean_script
        output_attributes:
          tag: GPP
        convert_units_to: g m-2 yr-1
      mmm:
        <<: *mmm_script
        ancestors: ['diag_process_historical_gpp/preprocess']
        mlr_model_name: MMM_hist
      postprocess:
        <<: *postprocess_script
        ancestors: [
          'diag_process_historical_gpp/preprocess',
          'diag_process_historical_gpp/mmm',
        ]

  # Label (= target variable)

  diag_mlr_label_gpp_rescaled:
    <<: *provenance
    scripts:
      preprocess:
        script: mlr/preprocess.py
        ancestors: ['diag_rescale_gpp_fraction_with_emergent_constraint/rescale']
        convert_units_to: g m-2 yr-1
        ignore:
          - {var_type: null}
        output_attributes:
          tag: GPP
      plot:
        <<: *plot_script
        ancestors: ['diag_mlr_label_gpp_rescaled/preprocess']
        ignore:
          - {var_type: prediction_output_error}
        plot_map:
          plot_kwargs:
            cbar_label: 'GPP (2091-2100) / gC m$^{-2}$ yr$^{-1}$'
            cbar_ticks: [0, 1000, 2000, 3000, 4000, 5000, 6000]
            vmin: 0
            vmax: 6000
      preprocess_error_mmm_rescaled:
        <<: *preprocess_error_script
        output_attributes:
          mlr_model_name: rMMM
      preprocess_error_gbrt:
        <<: *preprocess_error_script
        output_attributes:
          mlr_model_name: GBRT
      preprocess_error_gbrt_1d:
        <<: *preprocess_error_script
        output_attributes:
          mlr_model_name: 'GBRT-1D'
      preprocess_error_lasso:
        <<: *preprocess_error_script
        output_attributes:
          mlr_model_name: LASSO
      preprocess_error_lasso_1d:
        <<: *preprocess_error_script
        output_attributes:
          mlr_model_name: 'LASSO-1D'

  # Features (= predicctors)

  diag_mlr_feature_gpp_mean:
    <<: *provenance
    variables:
      features:
        <<: *variable_settings_features
        short_name: gpp
        preprocessor: preproc_map_flux_var
        mip: Lmon
        start_year: 1991
        end_year: 2000
      prediction_input:
        <<: *variable_settings_prediction_input
        short_name: gpp
        preprocessor: preproc_map_flux_var
        mip: Lmon
        start_year: 1991
        end_year: 2000
        additional_datasets:
          - {dataset: MTE, project: OBS, type: reanaly, version: May12, tier: 3}
      prediction_input_error:
        <<: *variable_settings_prediction_input
        short_name: gppStderr
        preprocessor: preproc_map_flux_var
        mip: Lmon
        start_year: 1991
        end_year: 2000
        var_type: prediction_input_error
        stderr: true
        additional_datasets:
          - {dataset: MTE, project: OBS, type: reanaly, version: May12, tier: 3}
    scripts:
      preprocess_mean:
        <<: *preprocess_mean_script
        output_attributes:
          tag: GPP
        convert_units_to: g m-2 yr-1
      plot:
        <<: *plot_script
        ancestors: ['diag_mlr_feature_gpp_mean/preprocess_mean']
        plot_map:
          plot_kwargs:
            cbar_label: 'GPP [gC m$^{-2}$ yr$^{-1}$]'

  diag_mlr_feature_lai_mean:
    <<: *provenance
    variables:
      features:
        <<: *variable_settings_features
        short_name: lai
        preprocessor: preproc_map_flux_var
        mip: Lmon
        start_year: 1982
        end_year: 2005
      prediction_input:
        <<: *variable_settings_prediction_input
        short_name: lai
        preprocessor: preproc_map_flux_var
        mip: Lmon
        start_year: 1982
        end_year: 2005
        additional_datasets:
          - {dataset: LAI3g, project: OBS, type: reanaly, version: 1_regridded, tier: 3}
    scripts:
      preprocess_mean:
        <<: *preprocess_mean_script
        output_attributes:
          tag: LAI
      plot:
        <<: *plot_script
        ancestors: ['diag_mlr_feature_lai_mean/preprocess_mean']
        plot_map:
          plot_kwargs:
            cbar_label: 'LAI [1]'

  diag_mlr_feature_pr_mean:
    <<: *provenance
    variables:
      features:
        <<: *variable_settings_features
        short_name: pr
        preprocessor: preproc_map
        mip: Amon
        start_year: 1901
        end_year: 2005
      prediction_input:
        <<: *variable_settings_prediction_input
        short_name: pr
        preprocessor: preproc_map
        mip: Amon
        start_year: 1901
        end_year: 2005
        additional_datasets:
          - {dataset: CRU, project: OBS, type: reanaly, version: TS4.02, tier: 2}
    scripts:
      preprocess_mean:
        <<: *preprocess_mean_script
        output_attributes:
          tag: PR
        convert_units_to: kg m-2 day-1
      plot:
        <<: *plot_script
        ancestors: ['diag_mlr_feature_pr_mean/preprocess_mean']
        plot_map:
          plot_kwargs:
            cbar_label: 'PR [kg m$^{-2}$ day$^{-1}$]'

  diag_mlr_feature_rsds_mean:
    <<: *provenance
    variables:
      features:
        <<: *variable_settings_features
        short_name: rsds
        preprocessor: preproc_map
        mip: Amon
        start_year: 1979
        end_year: 2005
      prediction_input:
        <<: *variable_settings_prediction_input
        short_name: rsds
        preprocessor: preproc_map
        mip: Amon
        start_year: 1979
        end_year: 2005
        additional_datasets:
          - {dataset: ERA-Interim, project: OBS6, type: reanaly, version: 1, tier: 3}
    scripts:
      preprocess_mean:
        <<: *preprocess_mean_script
        output_attributes:
          tag: RSDS
      plot:
        <<: *plot_script
        ancestors: ['diag_mlr_feature_rsds_mean/preprocess_mean']
        plot_map:
          plot_kwargs:
            cbar_label: 'RSDS [W m$^{-2}$]'

  diag_mlr_feature_tas_mean:
    <<: *provenance
    variables:
      features:
        <<: *variable_settings_features
        short_name: tas
        preprocessor: preproc_map
        mip: Amon
        start_year: 1901
        end_year: 2005
      prediction_input:
        <<: *variable_settings_prediction_input
        short_name: tas
        preprocessor: preproc_map
        mip: Amon
        start_year: 1901
        end_year: 2005
        additional_datasets:
          - {dataset: CRU, project: OBS, type: reanaly, version: TS4.02, tier: 2}
    scripts:
      preprocess_mean:
        <<: *preprocess_mean_script
        output_attributes:
          tag: T
        convert_units_to: celsius
      plot:
        <<: *plot_script
        ancestors: ['diag_mlr_feature_tas_mean/preprocess_mean']
        plot_map:
          plot_kwargs:
            cbar_label: 'T [°C]'

  # MLR models (Step 2a in paper)

  diag_mmm:
    <<: *provenance
    description: Use simple multi-model mean to predict target variable.
    scripts:
      mlr:
        <<: *mmm_script
        ancestors: ['diag_gpp_2100/preprocess']
        mlr_model_name: MMM
      postprocess:
        <<: *postprocess_script
        ancestors: [
          'diag_mmm/mlr',
          'diag_mte_for_cov_estimation/preprocess',
        ]

  diag_mmm_pseudo_reality:
    <<: *provenance
    description: Validate MMM model using pseudo-reality approach.
    scripts:
      mlr_pseudo_reality:
        <<: *mmm_script
        ancestors: ['diag_gpp_2100/preprocess']
        mlr_model_name: MMM
        pseudo_reality: ['dataset']

  diag_mmm_rescaled:
    <<: *provenance
    description: Use simple multi-model mean to predict target variable from rescaled data.
    scripts:
      mlr:
        <<: *mmm_script
        ancestors: ['diag_mlr_label_gpp_rescaled/preprocess']
        mlr_model_name: rMMM
      postprocess:
        <<: *postprocess_script
        ancestors: [
          'diag_mmm_rescaled/mlr',
          'diag_mte_for_cov_estimation/preprocess',
          'diag_mlr_label_gpp_rescaled/preprocess_error_mmm_rescaled',
        ]

  diag_mmm_rescaled_pseudo_reality:
    <<: *provenance
    description: Validate rescaled MMM model using pseudo-reality approach.
    scripts:
      mlr_pseudo_reality:
        <<: *mmm_script
        ancestors: ['diag_mlr_label_gpp_rescaled/preprocess']
        mlr_model_name: rMMM
        pseudo_reality: ['dataset']

  diag_gbrt:
    <<: *provenance
    description: GBRT model.
    scripts:
      mlr:
        <<: *gbrt_script
        ancestors: [
          'diag_mlr_label_gpp_rescaled/preprocess',
          'diag_mlr_feature_*/preprocess*',
        ]
        mlr_model_name: GBRT
      postprocess:
        <<: *postprocess_script
        ancestors: [
          'diag_gbrt/mlr',
          'diag_mte_for_cov_estimation/preprocess',
          'diag_mlr_label_gpp_rescaled/preprocess_error_gbrt',
        ]

  diag_gbrt_pseudo_reality:
    <<: *provenance
    description: Validate GBRT model using pseudo-reality approach.
    scripts:
      mlr_pseudo_reality:
        <<: *gbrt_pseudo_reality_script
        ancestors: [
          'diag_mlr_label_gpp_rescaled/preprocess',
          'diag_mlr_feature_*/preprocess*',
        ]
        mlr_model_name: GBRT

  diag_gbrt_1d:
    <<: *provenance
    description: GBRT model with single predictor.
    scripts:
      mlr:
        <<: *gbrt_script
        ancestors: [
          'diag_mlr_label_gpp_rescaled/preprocess',
          'diag_mlr_feature_gpp_mean/preprocess*',
        ]
        mlr_model_name: 'GBRT-1D'
      postprocess:
        <<: *postprocess_script
        ancestors: [
          'diag_gbrt_1d/mlr',
          'diag_mte_for_cov_estimation/preprocess',
          'diag_mlr_label_gpp_rescaled/preprocess_error_gbrt_1d',
        ]

  diag_gbrt_1d_pseudo_reality:
    <<: *provenance
    description: Validate GBRT model with single predictor using pseudo-reality approach.
    scripts:
      mlr_pseudo_reality:
        <<: *gbrt_pseudo_reality_script
        ancestors: [
          'diag_mlr_label_gpp_rescaled/preprocess',
          'diag_mlr_feature_gpp_mean/preprocess*',
        ]
        mlr_model_name: 'GBRT-1D'

  diag_lasso:
    <<: *provenance
    description: Use LASSO model to predict target variable.
    scripts:
      mlr:
        <<: *lasso_script
        ancestors: [
          'diag_mlr_label_gpp_rescaled/preprocess',
          'diag_mlr_feature_*/preprocess*',
        ]
        mlr_model_name: LASSO
      postprocess:
        <<: *postprocess_script
        ancestors: [
          'diag_lasso/mlr',
          'diag_mte_for_cov_estimation/preprocess',
          'diag_mlr_label_gpp_rescaled/preprocess_error_lasso',
        ]

  diag_lasso_pseudo_reality:
    <<: *provenance
    description: Validate LASSO model using pseudo-reality approach.
    scripts:
      mlr_pseudo_reality:
        <<: *lasso_pseudo_reality_script
        ancestors: [
          'diag_mlr_label_gpp_rescaled/preprocess',
          'diag_mlr_feature_*/preprocess*',
        ]
        mlr_model_name: LASSO

  diag_lasso_1d:
    <<: *provenance
    description: LASSO model with single predictor.
    scripts:
      mlr:
        <<: *lasso_script
        ancestors: [
          'diag_mlr_label_gpp_rescaled/preprocess',
          'diag_mlr_feature_gpp_mean/preprocess*',
        ]
        mlr_model_name: 'LASSO-1D'
      postprocess:
        <<: *postprocess_script
        ancestors: [
          'diag_lasso_1d/mlr',
          'diag_mte_for_cov_estimation/preprocess',
          'diag_mlr_label_gpp_rescaled/preprocess_error_lasso_1d',
        ]

  diag_lasso_1d_pseudo_reality:
    <<: *provenance
    description: Validate LASSO model with single predictor using pseudo-reality approach.
    scripts:
      mlr_pseudo_reality:
        <<: *lasso_pseudo_reality_script
        ancestors: [
          'diag_mlr_label_gpp_rescaled/preprocess',
          'diag_mlr_feature_gpp_mean/preprocess*',
        ]
        mlr_model_name: 'LASSO-1D'

  # Plots

  diag_plot_rescaled_zonal_means:
    <<: *provenance
    scripts:
      preprocess_original_data:
        <<: *preprocess_zonal_means_script
        ancestors: ['diag_gpp_2100/preprocess_for_rescaling']
      preprocess_rescaled_data:
        <<: *preprocess_zonal_means_script
        ancestors: ['diag_mlr_label_gpp_rescaled/preprocess']
        output_attributes:
          tag: GPP
      plot:
        <<: *plot_script
        ancestors: [
          'diag_plot_rescaled_zonal_means/preprocess_original_data',
          'diag_plot_rescaled_zonal_means/preprocess_rescaled_data',
        ]
        ignore:
          - {var_type: prediction_output_error}
        plot_xy:
          pyplot_kwargs:
            xlim: [-70.0, 90.0]
            xlabel: 'latitude [°]'
            ylabel: 'GPP (2091-2100) / gC m$^{-2}$ yr$^{-1}$'
            title: Global GPP at the end of the 21st century
        additional_plot_kwargs_xy_plots:
          label___CanESM2:               {color: C0, alpha: 1.0}
          label___CESM1-BGC:             {color: C1, alpha: 1.0}
          label___GFDL-ESM2M:            {color: C2, alpha: 1.0}
          label___HadGEM2-ES:            {color: C3, alpha: 1.0}
          label___MIROC-ESM:             {color: C4, alpha: 1.0}
          label___MPI-ESM-LR:            {color: C5, alpha: 1.0}
          label___NorESM1-ME:            {color: C6, alpha: 1.0}
          label_to_rescale___CanESM2:    {color: C0, alpha: 0.5, linestyle: '--', label: null}
          label_to_rescale___CESM1-BGC:  {color: C1, alpha: 0.5, linestyle: '--', label: null}
          label_to_rescale___GFDL-ESM2M: {color: C2, alpha: 0.5, linestyle: '--', label: null}
          label_to_rescale___HadGEM2-ES: {color: C3, alpha: 0.5, linestyle: '--', label: null}
          label_to_rescale___MIROC-ESM:  {color: C4, alpha: 0.5, linestyle: '--', label: null}
          label_to_rescale___MPI-ESM-LR: {color: C5, alpha: 0.5, linestyle: '--', label: null}
          label_to_rescale___NorESM1-ME: {color: C6, alpha: 0.5, linestyle: '--', label: null}

  diag_plot_cmip5_gbrt:
    <<: *provenance
    description: Create CMIP5 vs. GBRT plots.
    scripts:
      preprocess_plot:
        script: mlr/preprocess.py
        ancestors: [
          'diag_gbrt/mlr',
          'diag_mmm/mlr',
          'diag_mmm_rescaled/mlr',
          'diag_process_historical_gpp/mmm',
          'diag_process_mte/preprocess',
        ]
        collapse:
          mean: ['month_number']
        ignore:
          - {var_type: null}
      plot: &plot_script_map_plots
        <<: *plot_script
        ancestors: ['diag_plot_cmip5_gbrt/preprocess_plot']
        aliases:
          prediction_output: MTE
          prediction_output___GBRT: GBRT
          prediction_output___GBRT-1D: GBRT-1D
          prediction_output___LASSO: LASSO
          prediction_output___LASSO-1D: LASSO-1D
          prediction_output___MMM: MMM
          prediction_output___MMM_hist: MMM(hist)
        apply_common_mask: true
        group_by_attribute: mlr_model_name
        ignore:
          - {var_type: prediction_input}
          - {var_type: prediction_input_error}
          - {var_type: prediction_output_error}
          - {var_type: prediction_output_misc}
          - {var_type: null}
        plot_map:
          plot_kwargs:
            cbar_label: 'GPP [gC m$^{-2}$ yr$^{-1}$]'
            cbar_ticks: [0, 1000, 2000, 3000, 4000, 5000, 6000]
            vmin: 0
            vmax: 6000
        plot_map_abs_biases:
          plot_kwargs:
            cbar_label: 'ΔGPP [gC m$^{-2}$ yr$^{-1}$]'
            cbar_ticks: [-2500, -2000, -1500, -1000, -500, 0, 500, 1000, 1500, 2000, 2500]
            vmin: -2500
            vmax: 2500
        plot_map_rel_biases:
          plot_kwargs:
            cbar_label: 'Relative change in GPP [1]'
            cbar_ticks: [-1.0, -0.5, 0.0, 0.5, 1.0]
            vmin: -1.0
            vmax: 1.0
        print_corr: true

  diag_plot_mlr_models:
    <<: *provenance
    description: Create plots for the different MLR models.
    scripts:
      plot:
        <<: *plot_script_map_plots
        ancestors: &ancestors_plot_mlr_models
          [
            'diag_mmm/mlr',
            'diag_mmm_rescaled/mlr',
            'diag_mlr_label_gpp_rescaled/preprocess_error_mmm_rescaled',
            'diag_lasso_1d/mlr',
            'diag_mlr_label_gpp_rescaled/preprocess_error_lasso_1d',
            'diag_lasso/mlr',
            'diag_mlr_label_gpp_rescaled/preprocess_error_lasso',
            'diag_gbrt_1d/mlr',
            'diag_mlr_label_gpp_rescaled/preprocess_error_gbrt_1d',
            'diag_gbrt/mlr',
            'diag_mlr_label_gpp_rescaled/preprocess_error_gbrt',
          ]
        plot_map_abs_biases:
          plot_kwargs:
            cbar_label: 'ΔGPP [gC m$^{-2}$ yr$^{-1}$]'
            cbar_ticks: [-800, -600, -400, -200, 0, 200, 400, 600, 800]
            vmin: -800
            vmax: 800
        plot_map_ratios:
          plot_kwargs:
            cbar_label: 'GPP ratio [1]'
            cbar_ticks: [0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3]
            cmap: Reds
            vmin: 0.5
            vmax: 1.3
      plot_errors:
        <<: *plot_script_map_plots
        ancestors: *ancestors_plot_mlr_models
        ignore:
          - {var_type: prediction_input}
          - {var_type: prediction_input_error}
          - {var_type: prediction_output}
          - {var_type: prediction_output_misc}
          - {var_type: null}
        plot_map:
          plot_kwargs:
            cbar_label: 'GPP [gC m$^{-2}$ yr$^{-1}$]'
            cbar_ticks: [500, 600, 700, 800, 900, 1000, 1100, 1200]
            vmin: 500
            vmax: 1200
        plot_map_abs_biases:
          plot_kwargs:
            cbar_label: 'ΔGPP [gC m$^{-2}$ yr$^{-1}$]'
            cbar_ticks: [-500, -400, -300, -200, -100, 0, 100, 200, 300, 400, 500]
            vmin: -500
            vmax: 500

  diag_evaluate_residuals:
    <<: *provenance
    description: Evaluate residuals of different statistical models.
    scripts:
      evaluate_residuals:
        script: mlr/evaluate_residuals.py
        ancestors: [
          'diag_mmm_pseudo_reality/mlr_pseudo_reality',
          'diag_mmm_rescaled_pseudo_reality/mlr_pseudo_reality',
          'diag_lasso_1d_pseudo_reality/mlr_pseudo_reality',
          'diag_lasso_pseudo_reality/mlr_pseudo_reality',
          'diag_gbrt_1d_pseudo_reality/mlr_pseudo_reality',
          'diag_gbrt_pseudo_reality/mlr_pseudo_reality',
        ]
        ignore:
          - {var_type: null}
        mse_plot:
          pyplot_kwargs:
            ylabel: 'MSEP [gC$^2$ m$^{-4}$ yr$^{-2}$]'
            title: MSEP for different statistical models
        rmse_plot:
          pyplot_kwargs:
            ylabel: 'RMSEP [gC m$^{-2}$ yr$^{-1}$]'
            title: RMSEP for different statistical models
        seaborn_settings:
          <<: *seaborn_settings
          rc:
            xtick.top: false
            ytick.right: true
            xtick.minor.visible: false
            ytick.minor.visible: true
        weighted_samples: *weighted_samples
